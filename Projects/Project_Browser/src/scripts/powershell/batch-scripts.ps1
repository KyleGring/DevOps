# Auto-elevate to admin
if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    Start-Process PowerShell -Verb RunAs "-NoProfile -ExecutionPolicy Bypass -File """
    exit
}

@echo off REM Master initialization script that checks and enforces permissions  :checkPermissions net session >nul 2>&1 if %errorLevel% == 0 (     echo Administrative permissions confirmed. ) else (     echo Please run this script as Administrator     powershell Start-Process "%~f0" -Verb RunAs     exit /b )  REM Set environment variables set "PROJECT_ROOT=C:\Users\Kyle\Desktop\Development" set "SCRIPTS_DIR=%PROJECT_ROOT%\src\scripts" set "LOGS_DIR=%PROJECT_ROOT%\logs"  REM Create logging directory if not exist "%LOGS_DIR%" mkdir "%LOGS_DIR%"  REM Initialize logging echo [%date% %time%] Script started > "%LOGS_DIR%\setup.log"  :createStructure call :logMessage "Creating directory structure..." call "%SCRIPTS_DIR%\batch\create_structure.bat" if errorlevel 1 goto :error  :setupPermissions call :logMessage "Setting up permissions..." call "%SCRIPTS_DIR%\batch\set_permissions.bat" if errorlevel 1 goto :error  :configureFileAssociations call :logMessage "Configuring file associations..." call "%SCRIPTS_DIR%\batch\file_associations.bat" if errorlevel 1 goto :error  :organizeFiles call :logMessage "Organizing existing files..." call "%SCRIPTS_DIR%\batch\organize_files.bat" if errorlevel 1 goto :error  :setupTools call :logMessage "Setting up development tools..." call "%SCRIPTS_DIR%\batch\setup_tools.bat" if errorlevel 1 goto :error  goto :success  :error echo Error occurred! Check logs at %LOGS_DIR%\setup.log exit /b 1  :success echo Setup completed successfully! exit /b 0  :logMessage echo [%date% %time%] %~1 >> "%LOGS_DIR%\setup.log" exit /b 0  REM Individual script: create_structure.bat @echo off echo Creating project structure... mkdir "%PROJECT_ROOT%\src\scripts\batch" 2>nul mkdir "%PROJECT_ROOT%\src\scripts\powershell" 2>nul REM ... (continues with all directories)  REM Individual script: set_permissions.bat @echo off echo Setting permissions... icacls "%PROJECT_ROOT%" /grant:r "Administrators:(OI)(CI)F" /T icacls "%PROJECT_ROOT%" /grant:r "Users:(OI)(CI)RX" /T  REM Individual script: file_associations.bat @echo off echo Setting file associations... assoc .ps1=Microsoft.PowerShellScript.1 assoc .bat=batfile REM ... (continues with all associations)  REM Individual script: organize_files.bat @echo off echo Organizing files... for %%f in ("%PROJECT_ROOT%\*.*") do (     call :sortFile "%%f" )  REM Individual script: setup_tools.bat @echo off echo Setting up tools... where python >nul 2>nul || echo Python not found! Please install Python. where git >nul 2>nul || echo Git not found! Please install Git.

