# Initial Project Setup Script
$ProjectPath = "C:\Users\Kyle\Desktop\Development\Project_Browser"

# Ensure we have admin rights
if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    Start-Process powershell.exe "-NoProfile -ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs
    exit
}

# Create root directory if it doesn't exist
if (-not (Test-Path $ProjectPath)) {
    New-Item -Path $ProjectPath -ItemType Directory -Force
}

# Initial flat file structure
$initialFiles = @(
    # Scripts
    "setup_environment.ps1",
    "setup_environment.bat",
    "file_associations.ps1",
    "file_associations.bat",
    "monitor_system.ps1",
    "backup_system.ps1",
    "convert_scripts.ps1",
    
    # Configuration
    "vscode_settings.json",
    "git_config.json",
    "terminal_profile.json",
    "browser_config.json",
    
    # Documentation
    "README.md",
    "SETUP.md",
    "SECURITY.md",
    "MAINTENANCE.md",
    "TOC.md",
    "script_reference.md",
    "environment_standards.md",
    
    # Templates
    ".gitignore",
    "default_config.template",
    "script_template.ps1",
    "script_template.bat"
)

# Create all files with basic content
foreach ($file in $initialFiles) {
    $filePath = Join-Path $ProjectPath $file
    if (-not (Test-Path $filePath)) {
        switch -Wildcard ($file) {
            "*.md" {
                @"
# $(($file -split '\.')[0])

## Overview
Initial documentation file for Project Browser setup.

## Contents
- TBD

## Usage
- TBD

Created: $(Get-Date -Format "yyyy-MM-dd")
"@ | Out-File $filePath -Encoding UTF8
            }
            "*.ps1" {
                @"
# $(($file -split '\.')[0])
# Created: $(Get-Date -Format "yyyy-MM-dd")
# Purpose: Script for Project Browser setup

# Ensure admin rights
if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    Start-Process powershell.exe "-NoProfile -ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs
    exit
}

# Main script content
"@ | Out-File $filePath -Encoding UTF8
            }
            "*.bat" {
                @"
@echo off
REM $(($file -split '\.')[0])
REM Created: $(Get-Date -Format "yyyy-MM-dd")
REM Purpose: Batch script for Project Browser setup

NET SESSION >nul 2>&1
if %errorLevel% == 0 (
    echo Success: Administrative permissions confirmed.
) else (
    echo Failure: Current permissions inadequate.
    echo Please run as administrator.
    pause
    exit /b 1
)

REM Main script content
"@ | Out-File $filePath -Encoding UTF8
            }
            "*.json" {
                @"
{
    "description": "$(($file -split '\.')[0])",
    "created": "$(Get-Date -Format "yyyy-MM-dd")",
    "version": "1.0.0",
    "settings": {}
}
"@ | Out-File $filePath -Encoding UTF8
            }
            ".gitignore" {
                @"
# System Files
.DS_Store
Thumbs.db

# IDE
.vscode/
.idea/
*.suo
*.user

# Temporary Files
*.log
*.tmp
temp/
logs/

# Build Output
bin/
obj/
dist/
build/

# Dependencies
node_modules/
packages/
"@ | Out-File $filePath -Encoding UTF8
            }
            default {
                New-Item -Path $filePath -ItemType File -Force
            }
        }
        Write-Host "Created: $file"
    }
}

# Create primary README with file listing
$readmePath = Join-Path $ProjectPath "README.md"
@"
# Project Browser Setup

## Overview
This project contains setup and configuration files for browser and development environment customization.

## File Structure
$(($initialFiles | ForEach-Object { "- $_`n" }) -join '')

## Setup Instructions
1. Run setup_environment scripts as administrator
2. Review and customize configurations
3. Check documentation for detailed instructions

## Documentation
See individual .md files for specific documentation on each component.

## Maintenance
Regular updates and maintenance procedures are documented in MAINTENANCE.md.

Created: $(Get-Date -Format "yyyy-MM-dd")
Last Updated: $(Get-Date -Format "yyyy-MM-dd")
"@ | Out-File $readmePath -Encoding UTF8 -Force

Write-Host "`nInitial project structure created at: $ProjectPath"
Write-Host "Please review README.md for next steps."
